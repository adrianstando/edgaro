name: main-check

on:
  - push
  - pull_request

jobs:
  test:
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.8', '3.9', '3.10']
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install tox tox-gh-actions
    - name: Test with tox
      env:
        OPENML_CREDENTIALS: ${{ secrets.OPENML_CREDENTIALS }}
        PLATFORM: ${{ matrix.platform }}
      run: tox

  deploy-docs:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
     - name: Checkout
       uses: actions/checkout@v3
     - name: Set up Python 3.9
       uses: actions/setup-python@v4
       with:
         python-version: '3.9'
     - name: Install dependencies
       run: |
         sudo apt install pandoc
         pip install sphinx sphinx-rtd-theme docutils==0.17
         pip install myst-parser
         pip install nbsphinx
         pip install -r requirements.txt
         pip install IPython
     - name: Sphinx build
       run: |
         sphinx-build docs _build
     - name: Deploy website
       uses: peaceiris/actions-gh-pages@v3
       with:
         publish_branch: gh-pages
         github_token: ${{ secrets.GITHUB_TOKEN }}
         publish_dir: _build/
         force_orphan: true

  deploy-package:
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install build
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/
    - name: Deploy to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

  create-release:
    needs: [deploy-docs, deploy-package]
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install build
    - name: Build a binary wheel and a source tarball
      run: |
        python -m build --sdist --wheel --outdir dist/
    - name: Extract release notes
      id: extract-release-notes
      uses: ffurrer2/extract-release-notes@v1
    - name: Create release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        body: ${{ steps.extract-release-notes.outputs.release_notes }}

